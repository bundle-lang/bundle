<top-level> ::= <function-decl>*

<int-literal> ::= [0-9]+

<unary-operator> ::= + | -

<binary-operator> ::= <unary-operator> | * | /

<unary-expr> ::= <unary-operator> <expr>

<binary-expr> ::= <expr> <binary-operator> <expr>

<expr> ::= <int-literal> | <unary-expr> | <binary-expr>

<symbol> ::= [_a-zA-Z]+[_a-zA-Z0-9]*

<type> ::= u8 | i8 | u16 | i16 | u32 | i32 | u64 | i64 | bool

<var-decl> ::= let <symbol> <type> = <expr>

<elif> = elif <expr> <body>

<else> = else <body>

<if> ::= if <expr> <body> <elif>* <else>?

<statement> ::= <if> | <var-decl>

<body> = { <statement>* }

<function-decl> ::= fn <symbol> (<args>) <type> <body>
